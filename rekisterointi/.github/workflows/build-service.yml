name: rekisterointi
on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3.1.0
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: rekisterointi-ui/package-lock.json
      - name: Install app dependencies
        run: npm ci
        working-directory: rekisterointi-ui
      - name: Build react app
        run: npm run build
        working-directory: rekisterointi-ui
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: "maven"
      - name: Build
        run: mvn clean package -Pci -B -Dbranch=$GITHUB_REF_NAME -Drevision=$GITHUB_SHA -DbuildNumber=$GITHUB_RUN_NUMBER/$GITHUB_RUN_ATTEMPT
      - name: Upload rekisterointi-jar
        uses: actions/upload-artifact@v2
        with:
          name: rekisterointi-jar
          path: target/rekisterointi.jar
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Opetushallitus_rekisterointi
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download rekisterointi-jar
        uses: actions/download-artifact@v2
        with:
          name: rekisterointi-jar
      - uses: actions/setup-node@v3.1.0
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: rekisterointi-ui/package-lock.json
      - name: Install app dependencies
        run: npm ci
        working-directory: rekisterointi-ui
      - name: Install Playwright dependencies
        run: npx playwright install-deps chromium
        working-directory: rekisterointi-ui
      - name: Run playwright tests
        run: |
          java -jar -Dspring-boot.run.profiles=ci rekisterointi.jar &
          cd rekisterointi-ui
          ./scripts/ci-wait-for-frontend.sh
          HEADLESS=true npm run playwright:test
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-results
          path: rekisterointi-ui/playwright-results
          retention-days: 10
  deploy-container:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Download rekisterointi-jar
        uses: actions/download-artifact@v2
        with:
          name: rekisterointi-jar
      - name: Build Docker Conainer
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          export BASE_IMAGE="baseimage-fatjar-openjdk11:master"
          export ARTIFACT_NAME="rekisterointi-ui"
          cp rekisterointi.jar $DOCKER_BUILD_DIR/artifact/$ARTIFACT_NAME.jar
          cp -vr oph-configuration $DOCKER_BUILD_DIR/config/
          ./ci-tools/common/pull-image.sh
          ./ci-tools/github-build/build-fatjar.sh $ARTIFACT_NAME
          ./ci-tools/github-build/upload-image.sh $ARTIFACT_NAME
