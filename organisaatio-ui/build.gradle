plugins {
    id "com.github.node-gradle.node" version "2.2.4"
    id 'java'
}
sonarqube {
    properties {
        property "sonar.sources", "src/"
        property "sonar.language", "js,ts,tsx"
        property "sonar.javascript.lcov.reportPaths", "coverage/lcov.info"
    }
}
node {
    version = '14.16.1'
    download = true
}
/*
task audit(type: NpmTask, dependsOn: npmInstall) {
	inputs.files(file('package.json'))
	outputs.dir("${buildDir}/node_modules/")
	args = ['run', 'audit']
}
*/
task lint(type: NpmTask, dependsOn: npmInstall) {
    inputs.files(files('src'))
    outputs.dir('src')
    args = ['run', 'lint']
}
task checkFormatting(type: NpmTask, dependsOn: lint) {
    inputs.files(files('src'))
    outputs.dir('src')
    args = ['run', 'prettier']
}
task uiTest(type: NpmTask, dependsOn: checkFormatting) {
    inputs.files(files('src'))
    outputs.dir('src')
    environment = ['CI': 'true']
    args = ['run', 'test']
}

task igTest(type: NpmTask) {
    inputs.files(files('src'))
    outputs.dir('src')
    environment = ['CI': 'true']
    args = ['run', 'cypress:test']
}

task bundle(type: NpmTask, dependsOn: uiTest) {
    inputs.files(files('src', 'public'))
    outputs.dir("${buildDir}")
    args = ['run', 'build']
}

task run(type: NpmTask) {
    args = ['start']
}

task webjar(type: Jar, dependsOn: 'jar') {
    inputs.files(files("${buildDir}"))
    outputs.file("${buildDir}/libs/${jar.archiveFileName}")
    from(fileTree("${buildDir}")) {
        exclude 'libs/'
        into 'META-INF/resources'
    }
}

check.dependsOn(test)
jar.dependsOn(bundle)
jar.finalizedBy('webjar')
